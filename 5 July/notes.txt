bash: 400:: command not found
DLGBMBA003:nodejs-730pm saikumar$ mongo
MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Server has startup warnings: 
2023-07-05T10:37:57.289+0530 I CONTROL  [initandlisten] 
2023-07-05T10:37:57.290+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2023-07-05T10:37:57.290+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2023-07-05T10:37:57.290+0530 I CONTROL  [initandlisten] 
2023-07-05T10:37:57.291+0530 I CONTROL  [initandlisten] ** WARNING: This server is bound to localhost.
2023-07-05T10:37:57.291+0530 I CONTROL  [initandlisten] **          Remote systems will be unable to connect to this server. 
2023-07-05T10:37:57.291+0530 I CONTROL  [initandlisten] **          Start the server with --bind_ip <address> to specify which IP 
2023-07-05T10:37:57.291+0530 I CONTROL  [initandlisten] **          addresses it should serve responses from, or with --bind_ip_all to
2023-07-05T10:37:57.291+0530 I CONTROL  [initandlisten] **          bind to all interfaces. If this behavior is desired, start the
2023-07-05T10:37:57.291+0530 I CONTROL  [initandlisten] **          server with --bind_ip 127.0.0.1 to disable this warning.
2023-07-05T10:37:57.291+0530 I CONTROL  [initandlisten] 
2023-07-05T10:37:57.291+0530 I CONTROL  [initandlisten] 
2023-07-05T10:37:57.291+0530 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. Number of files is 256, should be at least 1000
> show dbs
admin             0.000GB
config            0.000GB
ecommerceproject  0.000GB
local             0.000GB
> use flipkart
switched to db flipkart
> db.createCollection('users');
{ "ok" : 1 }
> show collections
users
> show dbs
admin             0.000GB
config            0.000GB
ecommerceproject  0.000GB
flipkart          0.000GB
local             0.000GB
> show collections
users
> db.users.find().pretty();
> db.dropCollection('users');
2023-07-05T18:05:38.193+0530 E QUERY    [thread1] TypeError: db.dropCollection is not a function :
@(shell):1:1
> db.users.drop();
true
> show collections;
> show dbs
admin             0.000GB
config            0.000GB
ecommerceproject  0.000GB
local             0.000GB
> use ecommerce
switched to db ecommerce
> db.createCollection('users');
{ "ok" : 1 }
> show collections
users
> db
ecommerce
> db.dropDatabase();
{ "dropped" : "ecommerce", "ok" : 1 }
> show dbs;
admin             0.000GB
config            0.000GB
ecommerceproject  0.000GB
local             0.000GB
> use ecommerce
switched to db ecommerce
> db
ecommerce
> db.users.insert([{id:101, name:'kiran'}, {id:102, name:'rajesh'}, {id:103, name:'anil'}]);
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 3,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
> db.users.find().pretty();
{
        "_id" : ObjectId("64a564d14d9482fc6db3245b"),
        "id" : 101,
        "name" : "kiran"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245c"),
        "id" : 102,
        "name" : "rajesh"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245d"),
        "id" : 103,
        "name" : "anil"
}
> db.users.find({id:102});
{ "_id" : ObjectId("64a564d14d9482fc6db3245c"), "id" : 102, "name" : "rajesh" }
> db.users.find({id:102}).pretty();
{
        "_id" : ObjectId("64a564d14d9482fc6db3245c"),
        "id" : 102,
        "name" : "rajesh"
}
> db.users.find({id:103}).pretty();
{
        "_id" : ObjectId("64a564d14d9482fc6db3245d"),
        "id" : 103,
        "name" : "anil"
}
> db.users.insert([{id:104, name:'nithin'}, {id:105, name:'ram'}, {id:106, name:'raheem'}]);
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 3,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
> db.users.find().pretty();
{
        "_id" : ObjectId("64a564d14d9482fc6db3245b"),
        "id" : 101,
        "name" : "kiran"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245c"),
        "id" : 102,
        "name" : "rajesh"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245d"),
        "id" : 103,
        "name" : "anil"
}
{
        "_id" : ObjectId("64a565814d9482fc6db3245e"),
        "id" : 104,
        "name" : "nithin"
}
{ "_id" : ObjectId("64a565814d9482fc6db3245f"), "id" : 105, "name" : "ram" }
{
        "_id" : ObjectId("64a565814d9482fc6db32460"),
        "id" : 106,
        "name" : "raheem"
}
> db.users.find({id:{$gt : 103}}).pretty();
{
        "_id" : ObjectId("64a565814d9482fc6db3245e"),
        "id" : 104,
        "name" : "nithin"
}
{ "_id" : ObjectId("64a565814d9482fc6db3245f"), "id" : 105, "name" : "ram" }
{
        "_id" : ObjectId("64a565814d9482fc6db32460"),
        "id" : 106,
        "name" : "raheem"
}
> db.users.find({id:{$lt : 103}}).pretty();
{
        "_id" : ObjectId("64a564d14d9482fc6db3245b"),
        "id" : 101,
        "name" : "kiran"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245c"),
        "id" : 102,
        "name" : "rajesh"
}
> db.users.find({id:{$lte : 103}}).pretty();
{
        "_id" : ObjectId("64a564d14d9482fc6db3245b"),
        "id" : 101,
        "name" : "kiran"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245c"),
        "id" : 102,
        "name" : "rajesh"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245d"),
        "id" : 103,
        "name" : "anil"
}
> db.users.find({id:{$gte : 103}}).pretty();
{
        "_id" : ObjectId("64a564d14d9482fc6db3245d"),
        "id" : 103,
        "name" : "anil"
}
{
        "_id" : ObjectId("64a565814d9482fc6db3245e"),
        "id" : 104,
        "name" : "nithin"
}
{ "_id" : ObjectId("64a565814d9482fc6db3245f"), "id" : 105, "name" : "ram" }
{
        "_id" : ObjectId("64a565814d9482fc6db32460"),
        "id" : 106,
        "name" : "raheem"
}
> show dbs;
admin             0.000GB
config            0.000GB
ecommerce         0.000GB
ecommerceproject  0.000GB
local             0.000GB
> db
ecommerce
> db.users.find({id:106});
{ "_id" : ObjectId("64a565814d9482fc6db32460"), "id" : 106, "name" : "raheem" }
> db.users.find({id:106}).explain('executionStats');
{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "ecommerce.users",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "id" : {
                                "$eq" : 106
                        }
                },
                "winningPlan" : {
                        "stage" : "COLLSCAN",
                        "filter" : {
                                "id" : {
                                        "$eq" : 106
                                }
                        },
                        "direction" : "forward"
                },
                "rejectedPlans" : [ ]
        },
        "executionStats" : {
                "executionSuccess" : true,
                "nReturned" : 1,
                "executionTimeMillis" : 1,
                "totalKeysExamined" : 0,
                "totalDocsExamined" : 6,
                "executionStages" : {
                        "stage" : "COLLSCAN",
                        "filter" : {
                                "id" : {
                                        "$eq" : 106
                                }
                        },
                        "nReturned" : 1,
                        "executionTimeMillisEstimate" : 0,
                        "works" : 8,
                        "advanced" : 1,
                        "needTime" : 6,
                        "needYield" : 0,
                        "saveState" : 0,
                        "restoreState" : 0,
                        "isEOF" : 1,
                        "invalidates" : 0,
                        "direction" : "forward",
                        "docsExamined" : 6
                }
        },
        "serverInfo" : {
                "host" : "DLGBMBA003",
                "port" : 27017,
                "version" : "3.6.3",
                "gitVersion" : "9586e557d54ef70f9ca4b43c26892cd55257e1a5"
        },
        "ok" : 1
}
> db.users.find({id:103}).explain('executionStats');
{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "ecommerce.users",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "id" : {
                                "$eq" : 103
                        }
                },
                "winningPlan" : {
                        "stage" : "COLLSCAN",
                        "filter" : {
                                "id" : {
                                        "$eq" : 103
                                }
                        },
                        "direction" : "forward"
                },
                "rejectedPlans" : [ ]
        },
        "executionStats" : {
                "executionSuccess" : true,
                "nReturned" : 1,
                "executionTimeMillis" : 0,
                "totalKeysExamined" : 0,
                "totalDocsExamined" : 6,
                "executionStages" : {
                        "stage" : "COLLSCAN",
                        "filter" : {
                                "id" : {
                                        "$eq" : 103
                                }
                        },
                        "nReturned" : 1,
                        "executionTimeMillisEstimate" : 0,
                        "works" : 8,
                        "advanced" : 1,
                        "needTime" : 6,
                        "needYield" : 0,
                        "saveState" : 0,
                        "restoreState" : 0,
                        "isEOF" : 1,
                        "invalidates" : 0,
                        "direction" : "forward",
                        "docsExamined" : 6
                }
        },
        "serverInfo" : {
                "host" : "DLGBMBA003",
                "port" : 27017,
                "version" : "3.6.3",
                "gitVersion" : "9586e557d54ef70f9ca4b43c26892cd55257e1a5"
        },
        "ok" : 1
}
> db.users.getindexes();
2023-07-05T18:24:15.072+0530 E QUERY    [thread1] TypeError: db.users.getindexes is not a function :
@(shell):1:1
> db.users.getIndexes();
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_",
                "ns" : "ecommerce.users"
        }
]
> db.users.createIndex({id:1});
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
> db.users.getIndexes();
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_",
                "ns" : "ecommerce.users"
        },
        {
                "v" : 2,
                "key" : {
                        "id" : 1
                },
                "name" : "id_1",
                "ns" : "ecommerce.users"
        }
]
> db.users.find({id:103}).explain('executionStats');
{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "ecommerce.users",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "id" : {
                                "$eq" : 103
                        }
                },
                "winningPlan" : {
                        "stage" : "FETCH",
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                "keyPattern" : {
                                        "id" : 1
                                },
                                "indexName" : "id_1",
                                "isMultiKey" : false,
                                "multiKeyPaths" : {
                                        "id" : [ ]
                                },
                                "isUnique" : false,
                                "isSparse" : false,
                                "isPartial" : false,
                                "indexVersion" : 2,
                                "direction" : "forward",
                                "indexBounds" : {
                                        "id" : [
                                                "[103.0, 103.0]"
                                        ]
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        "executionStats" : {
                "executionSuccess" : true,
                "nReturned" : 1,
                "executionTimeMillis" : 2,
                "totalKeysExamined" : 1,
                "totalDocsExamined" : 1,
                "executionStages" : {
                        "stage" : "FETCH",
                        "nReturned" : 1,
                        "executionTimeMillisEstimate" : 0,
                        "works" : 2,
                        "advanced" : 1,
                        "needTime" : 0,
                        "needYield" : 0,
                        "saveState" : 0,
                        "restoreState" : 0,
                        "isEOF" : 1,
                        "invalidates" : 0,
                        "docsExamined" : 1,
                        "alreadyHasObj" : 0,
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                "nReturned" : 1,
                                "executionTimeMillisEstimate" : 0,
                                "works" : 2,
                                "advanced" : 1,
                                "needTime" : 0,
                                "needYield" : 0,
                                "saveState" : 0,
                                "restoreState" : 0,
                                "isEOF" : 1,
                                "invalidates" : 0,
                                "keyPattern" : {
                                        "id" : 1
                                },
                                "indexName" : "id_1",
                                "isMultiKey" : false,
                                "multiKeyPaths" : {
                                        "id" : [ ]
                                },
                                "isUnique" : false,
                                "isSparse" : false,
                                "isPartial" : false,
                                "indexVersion" : 2,
                                "direction" : "forward",
                                "indexBounds" : {
                                        "id" : [
                                                "[103.0, 103.0]"
                                        ]
                                },
                                "keysExamined" : 1,
                                "seeks" : 1,
                                "dupsTested" : 0,
                                "dupsDropped" : 0,
                                "seenInvalidated" : 0
                        }
                }
        },
        "serverInfo" : {
                "host" : "DLGBMBA003",
                "port" : 27017,
                "version" : "3.6.3",
                "gitVersion" : "9586e557d54ef70f9ca4b43c26892cd55257e1a5"
        },
        "ok" : 1
}
> db.users.removeIndex({id:1});
2023-07-05T18:26:38.672+0530 E QUERY    [thread1] TypeError: db.users.removeIndex is not a function :
@(shell):1:1
> db.users.dropIndex({id:1});
{ "nIndexesWas" : 2, "ok" : 1 }
> db.users.getIndexes();
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_",
                "ns" : "ecommerce.users"
        }
]
> db.users.dropIndex({_id:1});
{
        "nIndexesWas" : 1,
        "ok" : 0,
        "errmsg" : "cannot drop _id index",
        "code" : 72,
        "codeName" : "InvalidOptions"
}
> db.products.insert([{pid:101, price:2000, name:'product 1'},{pid:102, price:9000, name:'product2'}]);
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 2,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
> db.users.find({});
{ "_id" : ObjectId("64a564d14d9482fc6db3245b"), "id" : 101, "name" : "kiran" }
{ "_id" : ObjectId("64a564d14d9482fc6db3245c"), "id" : 102, "name" : "rajesh" }
{ "_id" : ObjectId("64a564d14d9482fc6db3245d"), "id" : 103, "name" : "anil" }
{ "_id" : ObjectId("64a565814d9482fc6db3245e"), "id" : 104, "name" : "nithin" }
{ "_id" : ObjectId("64a565814d9482fc6db3245f"), "id" : 105, "name" : "ram" }
{ "_id" : ObjectId("64a565814d9482fc6db32460"), "id" : 106, "name" : "raheem" }
> db.users.find({}).pretty();
{
        "_id" : ObjectId("64a564d14d9482fc6db3245b"),
        "id" : 101,
        "name" : "kiran"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245c"),
        "id" : 102,
        "name" : "rajesh"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245d"),
        "id" : 103,
        "name" : "anil"
}
{
        "_id" : ObjectId("64a565814d9482fc6db3245e"),
        "id" : 104,
        "name" : "nithin"
}
{ "_id" : ObjectId("64a565814d9482fc6db3245f"), "id" : 105, "name" : "ram" }
{
        "_id" : ObjectId("64a565814d9482fc6db32460"),
        "id" : 106,
        "name" : "raheem"
}
> db.users.count();
6
> db.users.find({}).pretty();
{
        "_id" : ObjectId("64a564d14d9482fc6db3245b"),
        "id" : 101,
        "name" : "kiran"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245c"),
        "id" : 102,
        "name" : "rajesh"
}
{
        "_id" : ObjectId("64a564d14d9482fc6db3245d"),
        "id" : 103,
        "name" : "anil"
}
{
        "_id" : ObjectId("64a565814d9482fc6db3245e"),
        "id" : 104,
        "name" : "nithin"
}
{ "_id" : ObjectId("64a565814d9482fc6db3245f"), "id" : 105, "name" : "ram" }
{
        "_id" : ObjectId("64a565814d9482fc6db32460"),
        "id" : 106,
        "name" : "raheem"
}
> db.users.sort({id:1});
2023-07-05T18:57:15.414+0530 E QUERY    [thread1] TypeError: db.users.sort is not a function :
@(shell):1:1
> db.users.sort({id:1});
2023-07-05T18:57:51.182+0530 E QUERY    [thread1] TypeError: db.users.sort is not a function :
@(shell):1:1
> db.users.find().sort({id:1});
{ "_id" : ObjectId("64a564d14d9482fc6db3245b"), "id" : 101, "name" : "kiran" }
{ "_id" : ObjectId("64a564d14d9482fc6db3245c"), "id" : 102, "name" : "rajesh" }
{ "_id" : ObjectId("64a564d14d9482fc6db3245d"), "id" : 103, "name" : "anil" }
{ "_id" : ObjectId("64a565814d9482fc6db3245e"), "id" : 104, "name" : "nithin" }
{ "_id" : ObjectId("64a565814d9482fc6db3245f"), "id" : 105, "name" : "ram" }
{ "_id" : ObjectId("64a565814d9482fc6db32460"), "id" : 106, "name" : "raheem" }
> db.users.find().sort({id:-1});
{ "_id" : ObjectId("64a565814d9482fc6db32460"), "id" : 106, "name" : "raheem" }
{ "_id" : ObjectId("64a565814d9482fc6db3245f"), "id" : 105, "name" : "ram" }
{ "_id" : ObjectId("64a565814d9482fc6db3245e"), "id" : 104, "name" : "nithin" }
{ "_id" : ObjectId("64a564d14d9482fc6db3245d"), "id" : 103, "name" : "anil" }
{ "_id" : ObjectId("64a564d14d9482fc6db3245c"), "id" : 102, "name" : "rajesh" }
{ "_id" : ObjectId("64a564d14d9482fc6db3245b"), "id" : 101, "name" : "kiran" }
> c